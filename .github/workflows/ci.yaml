name: CI for Python Package

on:
  push:
      branches:
        - '**'
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Build the package
        run: python -m build -n -s

      - name: Run tests with pytest
        run: |
          pytest -vv

      - name: Extract version using setuptools_scm
        id: version
        run: |
          python -c 'from setuptools_scm import get_version; print(get_version())'



  # package-and-tag:
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'  # Only run on the main branch

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'

  #     - name: Install build tools
  #       run: pip install .[dev]

  #     - name: Build the package
  #       run: python -m build

  #     - name: Extract version using setuptools_scm
  #       id: version
  #       run: |
  #         echo "PACKAGE_VERSION=$(python -c 'from setuptools_scm import get_version; print(get_version())')" >> $GITHUB_ENV

  #     - name: Tag the release
  #       env:
  #         PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
  #       run: |
  #         git config user.name "GitHub Actions"
  #         git config user.email "actions@github.com"
  #         git tag -a "v${PACKAGE_VERSION}" -m "Release version ${PACKAGE_VERSION}"
  #         git push origin "v${PACKAGE_VERSION}"

  #     - name: Upload distribution
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: dist
  #         path: dist/